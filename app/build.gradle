plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id("kotlin-kapt")
    id("dagger.hilt.android.plugin")
    id("de.mannodermaus.android-junit5")
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.example.peak"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
}

kapt {
    correctErrorTypes = true
}

dependencies {

    implementation "androidx.core:core-ktx:$rootProject.kotlin_core_version"
    implementation "androidx.appcompat:appcompat:$rootProject.appcompat_version"
    implementation "com.google.android.material:material:$rootProject.material_version"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintlayout_version"

    // Junit
    //noinspection GradleDependency
    testImplementation "junit:junit:$rootProject.junit_version"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.junit_ext_version"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$rootProject.junit5_version"
    testImplementation "org.junit.jupiter:junit-jupiter:$rootProject.junit5_version"

    //Mockito
    testImplementation "org.mockito:mockito-core:$rootProject.mockito_version"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$rootProject.mockito_kotlin_version"
    testImplementation "org.mockito:mockito-inline:$rootProject.mockito_version"
    // Espresso
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espresso_version"

    // Hilt
    implementation "com.google.dagger:hilt-android:$rootProject.hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$rootProject.hilt_version"


    // Room
    implementation "androidx.room:room-runtime:$rootProject.room_version"
    annotationProcessor "androidx.room:room-compiler:$rootProject.room_version"
    // To use Kotlin annotation processing tool (kapt
    kapt "androidx.room:room-compiler:$rootProject.room_version"
    // To use Kotlin Symbol Processing (KSP
    //    ksp("androidx.room:room-compiler:$rootProject.room_version"
    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$rootProject.room_version"
    // Room test helpers
    testImplementation "androidx.room:room-testing:$rootProject.room_version"

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofit_version"
    implementation 'com.google.code.gson:gson:2.9.0'

    // coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$rootProject.coroutines_version"

    implementation "androidx.fragment:fragment-ktx:$rootProject.fragment_ktx_version"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel:$rootProject.lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata:$rootProject.lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$rootProject.lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common:$rootProject.lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$rootProject.lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.lifecycle_version"

    // Annotation processor
//    kapt("androidx.lifecycle:lifecycle-compiler:$rootProject.lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$rootProject.lifecycle_version"

    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$rootProject.test_liveData_version"


    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$rootProject.lifecycle_version"

}